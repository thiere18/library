name: publish

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main, master ]
jobs:
  linting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: psf/black@stable

  testing:

    runs-on: ubuntu-latest
    needs: [linting]

    steps:
      - name: pulling git repo
        uses: actions/checkout@v2
      - name: Building Docker Image and run the test
        run: bash scripts/test.sh
  # build:
  #   runs-on: ubuntu-latest
  #   needs: [testing]


  #   steps:
  #   - name: pulling git repo
  #     uses: actions/checkout@v2
  #   - name: Login to Docker Hub
  #     uses: docker/login-action@v1
  #     with:
  #         username: ${{ secrets.DOCKER_HUB_USERNAME }}
  #         password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

    # - name: Set up Docker Buildx
    #   id: buildx
    #   uses: docker/setup-buildx-action@v1

    # - name: Build and push
    #   id: docker_build
    #   uses: docker/build-push-action@v2
    #   with:
    #     context: backend
    #     file: Dockerfile
    #     builder: ${{ steps.buildx.outputs.name }}
    #     push: true
    #     tags: ${{ secrets.DOCKER_HUB_USERNAME }}/elapizo:latest
    #     cache-from: type=local,src=/tmp/.buildx-cache
    #     cache-to: type=local,dest=/tmp/.buildx-cache
    # - name: Image digest
    #   run: echo ${{ steps.docker_build.outputs.digest }}

  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: [build]
  #   environment:
  #     name: production
  #   steps:
  #     - name: pulling git repo
  #       uses: actions/checkout@v2
  #     - name: deploy to ubuntu server
  #       uses: appleboy/ssh-action@master
  #       with:
  #         host: ${{secrets.PROD_HOST}} 
  #         username: ${{secrets.PROD_USERNAME}}
  #         password: ${{secrets.PROD_PASSWORD}} 
        
  #         script: |

  #           cd elapizio 
  #           git pull
  #           docker-compose down
  #           docker-compose -f docker-compose.traefik.yml up --build
  #           docker-compose -f docker-compose.prod.yml up --build -d